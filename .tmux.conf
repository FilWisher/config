# set -g status off
set -g prefix 'C-b'
set -g visual-bell off
set -g default-terminal "screen-256color"

# Create new pane
bind-key -n -T prefix n split-window -t :.0 \;\
        swap-pane -s :.0 -t :.1 \;\
        select-layout main-vertical \;\
        run "tmux resize-pane -t :.0 -x \"$(echo \"#{window_width}/2/1\" | bc)\""

# Create new pane in current directory
bind-key -n -T prefix W split-window -t :.0 -c "#{pane_current_path}" \;\
        swap-pane -s :.0 -t :.1 \;\
        select-layout main-vertical \;\
        run "tmux resize-pane -t :.0 -x \"$(echo \"#{window_width}/2/1\" | bc)\""

# Create new pane in current directory
bind-key -n -T prefix w split-window -t :.0 -c "#{pane_current_path}" \;\
        select-layout main-vertical \;\
        run "tmux resize-pane -t :.0 -x \"$(echo \"#{window_width}/2/1\" | bc)\""

# Kill pane
bind-key -n -T prefix x kill-pane -t :. \;\
        select-layout main-vertical \;\
        run "tmux resize-pane -t :.0 -x \"$(echo \"#{window_width}/2/1\" | bc)\"" \;\
        select-pane -t :.0


# Rotate counterclockwise
bind-key -n -T prefix , rotate-window -U \; select-pane -t 0

# Rotate clockwise
bind-key -n -T prefix . rotate-window -D \; select-pane -t 0

# Focus selected pane
bind-key -n -T prefix Enter swap-pane -s :. -t :.0 \; select-pane -t :.0

# Refresh layout
bind-key -n -T prefix r select-layout main-vertical \;\
        run "tmux resize-pane -t :.0 -x \"$(echo \"#{window_width}/2/1\" | bc)\""


# vi copy mode
setw -g mode-keys vi
set-option -g default-command "reattach-to-user-namespace -l zsh"
# bind-key [ copy-mode
# bind-key -T copy-mode-vi v begin-selection
# bind-key -T copy-mode-vi y copy-selection
# bind-key -T copy-mode-vi V rectangle-toggle
# bind-key -T copy-mode-vi y send -X copy-pipe 'pbcopy'
# bind-key -T copy-mode-vi v send -X copy-pipe "xargs -I{} tmux split-window -v 'vim {}'"
bind-key -T copy-mode-vi y send -X copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi v send -X begin-selection
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

unbind-key -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X cancel

# bind-key ] paste-buffer

set -sg escape-time 5

# buffer
bind Space choose-buffer

bind-key -r -T prefix n next-window
bind-key -r -T prefix p previous-window

bind-key C-q kill-pane

bind-key -r S select-layout even-vertical
bind-key -r V select-layout even-horizontal

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

run-shell ~/.tmux/tmux-pain-control/pain_control.tmux
